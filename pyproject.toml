[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["Peskov Sergey <peskovdev@proton.me>"]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.100.1"
uvicorn = "^0.23.1"
pydantic-settings = "^2.0.2"
sqlalchemy = "^2.0.19"
alembic = "^1.11.1"
psycopg = "^3.1.9"
httpx = "^0.24.1"
websockets = "^11.0.3"
redis = "^4.6.0"
python-multipart = "^0.0.6"
isodate = "^0.6.1"
sqlalchemy-utils = "^0.41.1"


[tool.poetry.group.dev.dependencies]
pynvim = "^0.4.3"
isort = "^5.12.0"
black = "^23.7.0"
mypy = "^1.4.1"
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pylint = "^2.17.5"
configargparse = "^1.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = false
ignore_missing_imports = true
no_implicit_optional = true
plugins = ["sqlalchemy.ext.mypy.plugin"]


[tool.black]
line-length = 100

[tool.isort]
known_local_folder = "app"
lines_after_imports = 2
multi_line_output = 3
line_length = 100
include_trailing_comma = true

[tool.pytest]
addopts = "--cov=app --cov-report html:coverage-report-html --cov-fail-under=50"
python_files = "test_*.py"
python_classes = ["*Test", "Test*"]
python_functions = "test_*"
testpaths = "tests/"

[tool.coverage.report]
exclude_lines = [
    "# pragma: no cover",
    "def __repr__",
    "def __str__",
    "def __unicode__",
]
show_missing = true
skip_empty = true
omit = [
  "*/__init__.py",
  "app/db/migrator/env.py",
]

[tool.coverage.html]
directory = "pytest-cov-report"

[tool.coverage.run]
branch = true
concurrency = ['thread', 'greenlet']

[tool.pytest.ini_options]
asyncio_mode = "auto"
norecursedirs = "postgres-data"
